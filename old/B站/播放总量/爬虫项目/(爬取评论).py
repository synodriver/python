av_list = [79380480, 79345669, 79059467, 77468172, 79375377, 79634452, 79675416, 79414299, 79338528, 79414311, 77980200, 78962728, 79386666, 79104554, 78962729, 79143469, 77409839, 79632434, 78911541, 79192117, 79480892, 79017532, 79151678, 79376961, 79307330, 79496774, 79246919, 79498310, 78135367, 79232587, 79560780, 79425099, 79510094, 79502926, 77730895, 79155283, 79524950, 79539286, 79251544, 79631449, 79642201, 75688027, 79734878, 79449182, 79296608, 78986849, 79664738, 79609443, 79304292, 79733352, 79301737, 79385707, 79247468, 76558956, 79133806, 79075951, 79041649, 78576758, 79649912, 79444717, 78810746, 79679616, 79489154, 79198344, 79150729, 78014605, 79340687, 79338127, 79312015, 79498900, 77067925, 79454870, 79488669, 79162014, 79240351, 79225503, 79557281, 79682718, 79546531, 79272612, 79290021, 79396521, 75891885, 79577261, 79511216, 79494321, 79386802, 79605432, 78947006, 79062718, 79458496, 79520450, 79499970, 79497922, 78914763, 79018188, 79682766, 77419214, 79708368, 79493329, 79674063, 79591641, 79594202, 79021790, 79389408, 79465186, 76341474, 79238376, 79586025, 71197932, 79619309, 79556334, 79632622, 79516912, 78805233, 78775538, 79562995, 79633140, 79659764, 79075574, 79683319, 79457016, 77523706, 79445243, 79276283, 79599871, 79659776, 77187841, 79492354, 79441667, 79448837, 79641862, 78963464, 79589129, 79547146, 75649803, 79643918, 79696654, 79408910, 79729936, 79657750, 79644438, 75447062, 79294233, 79107870, 79377186, 79243046, 79487784, 79442729, 79527721, 79229229, 77609262, 79298866, 79246643, 79394616, 79147323, 79682365, 77379903, 76803398, 76090698, 79585613, 79641937, 79569747, 79478611, 79456600, 79243609, 79367515, 79632220, 79136605, 79551840, 79673188, 79373159, 77481835, 79746928, 79417201, 79080822, 79582584, 79528318, 79631746, 79294339, 79284101, 77151622, 76396933, 79494539, 78591372, 79662486, 79369623, 79677849, 79568794, 79608218, 79515548, 79085466, 79334810, 76589478, 79646631, 79503783, 79654829, 78363565, 79362989, 79293360, 79422896, 9687474, 79618286, 79705013, 77351351, 79626169, 79465404, 78702012, 79498684, 79479237, 79611846, 12611527, 76717012, 79518167, 79460320, 79565795, 79636452, 79348199, 79380458, 79387116, 79625197, 78869997, 78974447, 77047281, 79206392, 79565820, 79012351]

import requests
import re 
def dailichi():
    import random
    daili = [
        'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36',
        'Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; WOW64; Trident/4.0; SLCC1)',
        'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; WOW64; Trident/4.0; SLCC1)',
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1',
        'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1',
        'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71',
        'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)',
        'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)',
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11'
    ]
    dai = random.choice(daili)
    return {'User-Agent': f'{dai}'}

def get_pin(av):
    av=str(av)
    # print(av)
    with open('pinlun.txt','a+',encoding='utf-8')as f:
        # f.write(av+":\n--------------------\n")
        f.write("\n--------------------\n")
    try :
        for i in range(1,11):
            url = f'http://api.bilibili.com/x/v2/reply?jsonp=jsonp&pn={i}&type=1&oid={av}'
            response = requests.get(url=url,headers=dailichi())
            txt = response.json()['data']["replies"]
            for x in txt:
                # print(x['content']['message'])
                with open('pinlun.txt','a+',encoding='utf-8')as f:
                      f.write(x['content']['message']+'\n')
    except:
        pass
    with open('pinlun.txt','a+',encoding='utf-8')as f:
        f.write("\n--------------------\n")

def duoxiancheng(Hanshu,List,Time):
   import time
   from concurrent.futures import ThreadPoolExecutor
   pool= ThreadPoolExecutor(max_workers=10)
   for i in List:
       pool.submit(Hanshu,i)
       time.sleep(Time)
   pool.shutdown()

duoxiancheng(get_pin,av_list,1)
